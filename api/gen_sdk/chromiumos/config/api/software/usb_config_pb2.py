# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chromiumos/config/api/software/usb_config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n/chromiumos/config/api/software/usb_config.proto\x12\x1e\x63hromiumos.config.api.software\"h\n\tUsbConfig\x12@\n\x06typecd\x18\x01 \x01(\x0b\x32\x30.chromiumos.config.api.software.UsbConfig.TypeCD\x1a\x19\n\x06TypeCD\x12\x0f\n\x07\x64p_only\x18\x01 \x01(\x08\x42\x33Z1go.chromium.org/chromiumos/config/go/api/softwareb\x06proto3')



_USBCONFIG = DESCRIPTOR.message_types_by_name['UsbConfig']
_USBCONFIG_TYPECD = _USBCONFIG.nested_types_by_name['TypeCD']
UsbConfig = _reflection.GeneratedProtocolMessageType('UsbConfig', (_message.Message,), {

  'TypeCD' : _reflection.GeneratedProtocolMessageType('TypeCD', (_message.Message,), {
    'DESCRIPTOR' : _USBCONFIG_TYPECD,
    '__module__' : 'chromiumos.config.api.software.usb_config_pb2'
    # @@protoc_insertion_point(class_scope:chromiumos.config.api.software.UsbConfig.TypeCD)
    })
  ,
  'DESCRIPTOR' : _USBCONFIG,
  '__module__' : 'chromiumos.config.api.software.usb_config_pb2'
  # @@protoc_insertion_point(class_scope:chromiumos.config.api.software.UsbConfig)
  })
_sym_db.RegisterMessage(UsbConfig)
_sym_db.RegisterMessage(UsbConfig.TypeCD)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z1go.chromium.org/chromiumos/config/go/api/software'
  _USBCONFIG._serialized_start=83
  _USBCONFIG._serialized_end=187
  _USBCONFIG_TYPECD._serialized_start=162
  _USBCONFIG_TYPECD._serialized_end=187
# @@protoc_insertion_point(module_scope)
